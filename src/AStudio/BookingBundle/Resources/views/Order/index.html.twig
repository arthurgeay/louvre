{% extends "AStudioBookingBundle::layout.html.twig" %}

{% block order_body %}
    {% block stylesheets %}
        {{ parent() }}
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.css">
    {% endblock %}
    
    <h2>Réserver votre billet</h2>
    
    <div class="well">
      {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
        
       
      {# Les erreurs générales du formulaire. #}
        
        {% for error in form.vars.errors.form.getErrors(true) %}
            <div class="alert alert-danger">
                 <li>{{ error.message }}</li>
            </div>
        {% endfor %}
        
      

      {# Génération manuelle et éclatée : #}
      <div class="form-group">
        {# Génération du label. #}
        {{ form_label(form.nbTicket, "Nombre de billet", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.nbTicket) }}

        <div class="col-sm-1">
          {# Génération de l'input. #}
          {{ form_widget(form.nbTicket, {'attr': {'class': 'form-control', 'value': '1', 'min': '1'}}) }}
        </div>
      </div>
      
      <div class="form-group">
        {{ form_label(form.dateVisit, "Date de la visite", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.dateVisit) }}

        <div class="input-group date col-sm-5">
          {# Génération de l'input. #}
          {{ form_widget(form.dateVisit) }}
            <span class="input-group-addon"><i class="fa fa-calendar fa-lg" aria-hidden="true"></i></span>
        </div>
      
      </div>
        
      <div class="form-group">
        {{form_label(form.type, "Type de billet", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
        
        {{ form_errors(form.type) }}
        
        <div class="col-sm-5">
            {{ form_widget(form.type, {'attr': {'class': 'form-control'}}) }}
        </div>
      </div>
        
      <div class="form-group">
        {{ form_label(form.name, "Prénom", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
        {{ form_errors(form.name) }}
        <div class="col-sm-5">
          {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
        </div>
      </div>    
        
      {# Idem pour un autre champ. #}
      <div class="form-group">
        {{ form_label(form.mail, "Adresse mail", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
        {{ form_errors(form.mail) }}
        <div class="col-sm-5">
          {{ form_widget(form.mail, {'attr': {'class': 'form-control'}}) }}
        </div>
      </div>

      {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
      <div class="form-group">
          <div class="col-sm-10">
            <button type="submit" class="btn btn-success"><i class="fa fa-arrow-right" aria-hidden="true"></i> Continuer</button>
          </div>
          
      </div>
      

      {# Génération automatique des champs pas encore écrits.
         Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
         et tous les champs cachés (type « hidden »). #}
      {{ form_rest(form) }}
        <ul class="test" data-prototype="{{ form_widget(form.tickets.vars.prototype)|e('html_attr') }}">
        {% for ticketField in form.tickets %}
            {{form_errors(ticketField) }}
            {{ form_widget(ticketField) }}
        </ul>
        {% endfor %}
    

      {# Fermeture de la balise <form> du formulaire HTML #}
      {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/locales/bootstrap-datepicker.fr.min.js"></script>
    <script>
        jQuery(document).ready(function() {
            $('.input-group.date').datepicker({
                language: "fr",
                autoclose: true,
                todayHighlight: true,
                daysOfWeekDisabled: "0,2",
                format: "yyyy-mm-dd",
                startDate: "d",
                orientation: "auto"
            });
            
            
        });
    </script>
    <script>
        var $collectionHolder;

jQuery(document).ready(function() {
    // Get the ul that holds the collection of tags
    $collectionHolder = $('ul.test');

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);

        // add a new tag form (see next code block)
        addTagForm($collectionHolder);
    
    function addTagForm($collectionHolder) {
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');

    // get the new index
    var index = $collectionHolder.data('index');

    var newForm = prototype;
    // You need this only if you didn't set 'label' => false in your tags field in TaskType
    // Replace '__name__label__' in the prototype's HTML to
    // instead be a number based on how many items we have
    // newForm = newForm.replace(/__name__label__/g, index);

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    newForm = newForm.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<li></li>').append(newForm);
    
}

});
    </script>
{% endblock %}